<!DOCTYPE html>
<html>

<head>
  <title>
    <%= title %>
  </title>

  <!-- VENDOR CSS -->
  <link rel="stylesheet" href="/stylesheets/bootstrap.min.css">
  <link rel="stylesheet" href="/stylesheets/font-awesome/css/font-awesome.min.css">
  <link rel="stylesheet" href="/stylesheets/jquery-ui.css">
  <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
  <script src="/javascripts/jquery.min.js"></script>
  <script src="/javascripts/bootstrap.min.js"></script>
  <script src="/javascripts/jquery-ui.js"></script>
  <script src="/javascripts/axios.min.js"></script>
  <script src="/javascripts/vue/vue.js"></script>
  <link rel="stylesheet" href="/stylesheets/iview.css">
  <script src="/javascripts/vue/iview.min.js"></script>
  <script src="/javascripts/vue/vuejs-datepicker.min.js"></script>

  <link rel='stylesheet' href='/stylesheets/style.css' />

</head>
  <body>
    <div class="table-title" style="margin:-4px 0px 10px; background:#0175d8;">
      <div class="row">
        <div class="col-sm-6">
          <h2>Welcome!!
            <b>
              <%= admin.username %>
            </b>
          </h2>
        </div>
        <div class="col-sm-6">
          <a href="/auth/logout" class="btn btn-warning">
            <span>Logout</span>
          </a>
        </div>
      </div>
    </div>
    <div id="app">
      <div class="container">
        <div class="table-wrapper">
          <div class="table-title">
            <div class="row">
              <div class="col-sm-6">
                <h2>Manage
                  <b>Users</b>
                </h2>
              </div>
              <div class="col-sm-6">
                <a href="#addUserModal" class="btn btn-success" data-toggle="modal">
                  <i class="material-icons"></i>
                  <span>Add New User</span>
                </a>
              </div>
            </div>
          </div>
          <table class="table table-striped table-hover">
            <thead>
              <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Birthday</th>
                <th>Sex</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              <template v-for="(item, index) in list">
                <tr>
                  <td class="column-id">
                    {{ item.id }}
                  </td>
                  <td class="column-name">
                    <a @click.prevent="GetUserInfo(index)" href="#infoUserModal" class="info" data-toggle="modal">
                      {{ item.name }}
                    </a>
                  </td>
                  <td class="column-birthday">
                    {{ getDateTime(item.birthday)}}
                  </td>
                  <td class="column-sex">
                    {{ BooleanToSexStr(item.sex)}}
                  </td>
                  <td>
                    <a @click.prevent="setUserInfo(index)" href="#editUserModal" class="edit" data-toggle="modal">
                      <i class="material-icons" data-toggle="tooltip" title="Edit" data-original-title="Edit"></i>
                    </a>
                    <a @click.prevent="setUserInfo(index)" href="#deleteUserModal" class="delete" data-toggle="modal">
                      <i class="material-icons" data-toggle="tooltip" title="Delete" data-original-title="Delete"></i>
                    </a>
                  </td>
                </tr>
              </template>
            </tbody>
          </table>
        </div>
      </div>
      <!-- Add Modal HTML -->
      <div id="addUserModal" class="modal fade">
        <div class="modal-dialog">
          <div class="modal-content">
            <div action="api/users" method="post">
              <div class="modal-header">
                <h4 class="modal-title">Add User</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
              </div>
              <div class="modal-body">
                <div class="form-group">
                  <label>Name</label>
                  <input v-model="newUser.name" name="name" type="text" class="form-control" required>
                </div>
                <div class="form-group">
                  <label>Birthday</label>
                  <datepicker v-model="newUser.birthday" input-class="form-control" format="yyyy-MM-dd"></datepicker>
                </div>
                <div class="form-group">
                  <label>Sex</label>
                  </br>
                  <select v-model="newUser.sex" name="sex">
                    <option value="1">Male</option>
                    <option value="0">Female</option>
                  </select>
                </div>
              </div>
              <div class="modal-footer">
                <input type="button" class="btn btn-default" data-dismiss="modal" value="Cancel">
                <input type="button" @click="create()" class="btn btn-success" data-dismiss="modal" value="Add">
              </div>
            </div>
          </div>
        </div>
      </div>
      <!-- Edit Modal HTML -->
      <div id="editUserModal" class="modal fade">
        <div class="modal-dialog">
          <div class="modal-content">
            <div id="editUserForm">
              <div class="modal-header">
                <h4 class="modal-title">Edit User</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
              </div>
              <div class="modal-body">
                <div class="form-group">
                  <label>Name</label>
                  <input v-model="userInfo.name" type="text" name="name" class="form-control" required>
                </div>
                <div class="form-group">
                  <label>Birthday</label>
                  <datepicker v-model="userInfo.birthday" input-class="form-control" format="yyyy-MM-dd"></datepicker>
                </div>
                <div class="form-group">
                  <label>Sex</label>
                  </br>
                  <select v-model="userInfo.sex" name="sex">
                    <option value="1">Male</option>
                    <option value="0">Female</option>
                  </select>
                </div>
              </div>
              <div class="modal-footer">
                <input type="button" class="btn btn-default" data-dismiss="modal" value="Cancel">
                <input @click.prevent="updateUser()" type="button" class="btn btn-info" data-dismiss="modal" value="Update">
              </div>
            </div>
          </div>
        </div>
      </div>
      <!-- Delete Modal HTML -->
      <div id="deleteUserModal" class="modal fade">
        <div class="modal-dialog">
          <div class="modal-content">
            <div id="deleteUserForm">
              <div class="modal-header">
                <h4 class="modal-title">Delete User</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
              </div>
              <div class="modal-body">
                <p>Are you sure you want to delete this user?</p>
              </div>
              <div class="modal-footer">
                <input type="button" class="btn btn-default" data-dismiss="modal" value="Cancel">
                <input @click.prevent="deleteUser()" type="button" data-dismiss="modal" class="btn btn-danger" value="Delete">
              </div>
            </div>
          </div>
        </div>
      </div>
      <!-- Info Modal HTML -->
      <div id="infoUserModal" class="modal fade">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-content">
              <div id="infoUserForm">
                <input type="hidden" name="_method" value="PUT">
                <div class="modal-header">
                  <h4 class="modal-title">User Info</h4>
                  <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                </div>
                <div class="modal-body">
                  <div class="form-group">
                    <label>
                      <h2>Name</h2>
                    </label>
                    <h5>{{userInfo.name}}</h5>
                  </div>
                  <div class="form-group">
                    <label>
                      <h2>Birthday</h2>
                    </label>
                    <h5>{{getDateTime(userInfo.birthday)}}</h5>
                  </div>
                  <div class="form-group">
                    <label>
                      <h2>Sex</h2>
                    </label>
                    <h5>{{BooleanToSexStr(userInfo.sex)}}</h5>
                  </div>
                  <div class="form-group">
                    <label>
                      <h2>Created At</h2>
                    </label>
                    <h5>{{datetimeFormatUtil(userInfo.created_at)}}</h5>
                  </div>
                  <div class="form-group">
                    <label>
                      <h2>Latest Update at</h2>
                    </label>
                    <h5>{{datetimeFormatUtil(userInfo.updated_at)}}</h5>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script>
      new Vue({
        el: '#app',
        components: {
          datepicker: vuejsDatepicker
        },
        data: {
          userInfo: { name: "default" },
          newUser: {
            name: "",
            birthday: "",
            sex: 1
          },
          list: []
        },
        created() {
          this.GetUserList();
        },
        computed: {

        },
        methods: {
          setUserInfo(index) {
            this.userInfo = Object.assign({}, this.list[index]);
            
          },
          create: function () {
            axios.post('/api/users', this.newUser)
              .then((res) => {
                if (res.status == 200) {
                  this.$Message.info('successfully created a user');
                  this.GetUserList();
                } else {
                  this.$Message.error('Failed to create')
                }
              }, (err) => {
                this.$Message.error('Failed to create')
                console.log(err)
              })
          },
          updateUser: function () {
            axios.put('/api/user/' + this.userInfo.id.toString(), this.userInfo)
              .then((res) => {
                if (res.status == 200) {
                  this.$Message.info('successfully update a user');
                  this.GetUserList();
                } else {
                  this.$Message.error('Failed to update');
                }
              }, (err) => {
                this.$Message.error('Failed to update');
                console.log(err)
              })
          },
          deleteUser: function () {
            axios.delete('/api/user/' + this.userInfo.id.toString(), this.userInfo)
              .then((res) => {
                if (res.status == 200) {
                  this.$Message.info('successfully delete a user');
                  this.GetUserList();
                } else {
                  this.$Message.error('Failed to create');
                }
              }, (err) => {
                this.$Message.error('Failed to create');
                console.log(err)
              })
          },
          GetUserList: function () {
            const UserList = axios.get('/api/users')
              .then((res) => {
                if (res.status == 200) {
                  this.list = res.data.result
                } else {
                  this.$Message.error('failed To user list');
                }
              }, (err) => {
                this.$Message.error('failed To user list');
                console.log(err)
              })

            return UserList
          },
          GetUserInfo: function (index) {
            const UserInfo = axios.get('/api/user/' + this.list[index].id)
              .then((res) => {
                if (res.status == 200) {
                  this.userInfo = res.data.result[0]
                  this.$Message.error('successfully get user');
                } else {
                  this.$Message.error('failed To getInfo');
                }
              }, (err) => {
                this.$Message.error('failed To getInfo');
                console.log(err)
              })
            return UserInfo
          },
          getDateTime: function (date) {
            var d = new Date(date),
              month = '' + (d.getMonth() + 1),
              day = '' + d.getDate(),
              year = d.getFullYear();

            if (month.length < 2) month = '0' + month;
            if (day.length < 2) day = '0' + day;

            return [year, month, day].join('-');
          },
          datetimeFormatUtil: function (date) {
            var d = new Date(date),
              month = '' + (d.getMonth() + 1),
              day = '' + d.getDate(),
              year = d.getFullYear(),
              hour = d.getHours(date),
              min = d.getMinutes(date),
              sec = d.getSeconds(date);
            if (month.length < 2) month = '0' + month;
            if (day.length < 2) day = '0' + day;

            return [year, month, day].join('-') + ' ' + [hour, min, sec].join(':');
          },
          BooleanToSexStr: function (data) {
            return (data) ? "Male" : "Female";
          }
        }
      });
    </script>
  </body>

</html>